Component和PureComponent的区别：
Component生命周期中的shouldComponentUpdate方法，默认返回为true,这样会导致组件因为不相干数据的变化而重新渲染。
PureComponent中的shouldComponentUpdate方法会一一浅比较props和state中的属性，只有当发生改变才会返回true。

React的原理：

响应式编程：
数据变化，界面自动重新渲染，不用关心界面怎么渲染，只需要关心数据变化。

虚拟DOM：
react利用虚拟DOM实现每次渲染都只渲染最少的部分。
每当数据变化时，React会重构整个dom树，并将当前树和上一次的dom树进行对比，然后仅仅将需要改变的部分进行实际的浏览器dom更新。

JSX：
JSX是JS的拓展，使我们可以在JS语法中可以编写像HTML一样的代码。
可以使用HTML标签，但是不仅限于HTML标签，还可以使用自定义组件。
JSX语法依赖React。

React合成事件系统：
react组件上申明的事件最终绑定到document节点上，简化了dom原生事件，减少了内存开销。
react以队列的方式，从触发事件的组件向父组件回溯，调用在jsx中声明的callback,这是react自身实现的事件冒泡。
我们没法用event.stopPropagation()来停止事件传播，可以使用event.preventDefault()。

props和state的差别：
props是组件的对外接口，state是组件的内部状态。
props的赋值操作是在组件外部，state的赋值是在组件的内部。
组件不应该改变props的值，但是可以改变state的值。

单向数据流：
react中数据只能父组件传递到子组件，不能从子组件传递到父组件。

React组件与组件之间的数据传递：
父组件通过props传递数据给子组件。
子组件通过函数参数传递数据给父组件。

react组件的生命周期
首次加载
constractor
componentWillMount
render
componentDidMount
状态更新
componentWillReceiveProps
shouldComponentUpdate
componentWillUpdate
render
componentDidUpdate